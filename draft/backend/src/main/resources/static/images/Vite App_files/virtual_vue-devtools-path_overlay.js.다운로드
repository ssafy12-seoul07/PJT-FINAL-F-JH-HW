import { functions, setDevToolsClientUrl } from "/node_modules/@vue/devtools-core/dist/index.js?v=3f8db28f"
import { addCustomTab, createRpcServer, devtools, setDevToolsEnv, setOpenInEditorBaseUrl, toggleComponentInspectorEnabled } from "/node_modules/@vue/devtools-kit/dist/index.js?v=3f8db28f"
import vueDevToolsOptions from "/@id/__x00__virtual:vue-devtools-options"

function normalizeUrl(url) {
  return new URL(`${vueDevToolsOptions.base || '/'}${url}`, import.meta.url).toString()
}

const overlayDir = normalizeUrl(`@id/virtual:vue-devtools-path:overlay`)
const body = document.getElementsByTagName('body')[0]
const head = document.getElementsByTagName('head')[0]

setDevToolsEnv({
  vitePluginDetected: true,
})

const devtoolsClientUrl = normalizeUrl(`__devtools__/`)
setDevToolsClientUrl(devtoolsClientUrl)
setOpenInEditorBaseUrl(normalizeUrl('').slice(0, -1))

toggleComponentInspectorEnabled(!!vueDevToolsOptions.componentInspector)

devtools.init()

// create vite inspect tab
addCustomTab({
  title: 'Vite Inspect',
  name: 'vite-inspect',
  icon: 'i-carbon-ibm-watson-discovery',
  view: {
    type: 'iframe',
    src: normalizeUrl(`__inspect/`),
  },
  category: 'advanced',
})

// create link stylesheet
const link = document.createElement('link')
link.rel = 'stylesheet'
link.href = `${overlayDir}/devtools-overlay.css`

// create script
const script = document.createElement('script')
script.src = `${overlayDir}/devtools-overlay.mjs`
script.type = 'module'

// append to head
head.appendChild(link)

// append to body
body.appendChild(script)

// Used in the browser extension
window.__VUE_DEVTOOLS_VITE_PLUGIN_CLIENT_URL__ = `${window.location.origin}${devtoolsClientUrl}`

createRpcServer(functions, {
  preset: 'iframe',
})

createRpcServer(functions, {
  preset: 'broadcast',
})

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZpcnR1YWw6dnVlLWRldnRvb2xzLXBhdGg6b3ZlcmxheS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBmdW5jdGlvbnMsIHNldERldlRvb2xzQ2xpZW50VXJsIH0gZnJvbSBcIi9ub2RlX21vZHVsZXMvQHZ1ZS9kZXZ0b29scy1jb3JlL2Rpc3QvaW5kZXguanM/dj0zZjhkYjI4ZlwiXG5pbXBvcnQgeyBhZGRDdXN0b21UYWIsIGNyZWF0ZVJwY1NlcnZlciwgZGV2dG9vbHMsIHNldERldlRvb2xzRW52LCBzZXRPcGVuSW5FZGl0b3JCYXNlVXJsLCB0b2dnbGVDb21wb25lbnRJbnNwZWN0b3JFbmFibGVkIH0gZnJvbSBcIi9ub2RlX21vZHVsZXMvQHZ1ZS9kZXZ0b29scy1raXQvZGlzdC9pbmRleC5qcz92PTNmOGRiMjhmXCJcbmltcG9ydCB2dWVEZXZUb29sc09wdGlvbnMgZnJvbSBcIi9AaWQvX194MDBfX3ZpcnR1YWw6dnVlLWRldnRvb2xzLW9wdGlvbnNcIlxuXG5mdW5jdGlvbiBub3JtYWxpemVVcmwodXJsKSB7XG4gIHJldHVybiBuZXcgVVJMKGAke3Z1ZURldlRvb2xzT3B0aW9ucy5iYXNlIHx8ICcvJ30ke3VybH1gLCBpbXBvcnQubWV0YS51cmwpLnRvU3RyaW5nKClcbn1cblxuY29uc3Qgb3ZlcmxheURpciA9IG5vcm1hbGl6ZVVybChgQGlkL3ZpcnR1YWw6dnVlLWRldnRvb2xzLXBhdGg6b3ZlcmxheWApXG5jb25zdCBib2R5ID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2JvZHknKVswXVxuY29uc3QgaGVhZCA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdoZWFkJylbMF1cblxuc2V0RGV2VG9vbHNFbnYoe1xuICB2aXRlUGx1Z2luRGV0ZWN0ZWQ6IHRydWUsXG59KVxuXG5jb25zdCBkZXZ0b29sc0NsaWVudFVybCA9IG5vcm1hbGl6ZVVybChgX19kZXZ0b29sc19fL2ApXG5zZXREZXZUb29sc0NsaWVudFVybChkZXZ0b29sc0NsaWVudFVybClcbnNldE9wZW5JbkVkaXRvckJhc2VVcmwobm9ybWFsaXplVXJsKCcnKS5zbGljZSgwLCAtMSkpXG5cbnRvZ2dsZUNvbXBvbmVudEluc3BlY3RvckVuYWJsZWQoISF2dWVEZXZUb29sc09wdGlvbnMuY29tcG9uZW50SW5zcGVjdG9yKVxuXG5kZXZ0b29scy5pbml0KClcblxuLy8gY3JlYXRlIHZpdGUgaW5zcGVjdCB0YWJcbmFkZEN1c3RvbVRhYih7XG4gIHRpdGxlOiAnVml0ZSBJbnNwZWN0JyxcbiAgbmFtZTogJ3ZpdGUtaW5zcGVjdCcsXG4gIGljb246ICdpLWNhcmJvbi1pYm0td2F0c29uLWRpc2NvdmVyeScsXG4gIHZpZXc6IHtcbiAgICB0eXBlOiAnaWZyYW1lJyxcbiAgICBzcmM6IG5vcm1hbGl6ZVVybChgX19pbnNwZWN0L2ApLFxuICB9LFxuICBjYXRlZ29yeTogJ2FkdmFuY2VkJyxcbn0pXG5cbi8vIGNyZWF0ZSBsaW5rIHN0eWxlc2hlZXRcbmNvbnN0IGxpbmsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaW5rJylcbmxpbmsucmVsID0gJ3N0eWxlc2hlZXQnXG5saW5rLmhyZWYgPSBgJHtvdmVybGF5RGlyfS9kZXZ0b29scy1vdmVybGF5LmNzc2BcblxuLy8gY3JlYXRlIHNjcmlwdFxuY29uc3Qgc2NyaXB0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2NyaXB0JylcbnNjcmlwdC5zcmMgPSBgJHtvdmVybGF5RGlyfS9kZXZ0b29scy1vdmVybGF5Lm1qc2BcbnNjcmlwdC50eXBlID0gJ21vZHVsZSdcblxuLy8gYXBwZW5kIHRvIGhlYWRcbmhlYWQuYXBwZW5kQ2hpbGQobGluaylcblxuLy8gYXBwZW5kIHRvIGJvZHlcbmJvZHkuYXBwZW5kQ2hpbGQoc2NyaXB0KVxuXG4vLyBVc2VkIGluIHRoZSBicm93c2VyIGV4dGVuc2lvblxud2luZG93Ll9fVlVFX0RFVlRPT0xTX1ZJVEVfUExVR0lOX0NMSUVOVF9VUkxfXyA9IGAke3dpbmRvdy5sb2NhdGlvbi5vcmlnaW59JHtkZXZ0b29sc0NsaWVudFVybH1gXG5cbmNyZWF0ZVJwY1NlcnZlcihmdW5jdGlvbnMsIHtcbiAgcHJlc2V0OiAnaWZyYW1lJyxcbn0pXG5cbmNyZWF0ZVJwY1NlcnZlcihmdW5jdGlvbnMsIHtcbiAgcHJlc2V0OiAnYnJvYWRjYXN0Jyxcbn0pXG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDO0FBQzNHLE1BQU0sQ0FBQyxDQUFDLENBQUMsWUFBWSxDQUFDLENBQUMsZUFBZSxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsY0FBYyxDQUFDLENBQUMsc0JBQXNCLENBQUMsQ0FBQywrQkFBK0IsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDO0FBQzNMLE1BQU0sQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLGNBQWMsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQztBQUN6RTtBQUNBLFFBQVEsQ0FBQyxZQUFZLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztBQUM1QixDQUFDLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMs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